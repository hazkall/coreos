---
- hosts: all
  become: true
  name: Kubernetes ControlPlane
  tasks:
  - name: Configure Kubernetes Network
    block:
      - name: Ensure Network modules
        community.general.modprobe:
          name: "{{ item }}"
          state: present
        loop:
          - overlay
          - br_netfilter

  - name: Enable Kubernetes Services
    block:
      - name: Start CRI-O
        ansible.builtin.service:
          name: crio
          daemon_reload: true
          state: started
          enabled: true

      - name: Enable Kubelet
        ansible.builtin.service:
          name: kubelet
          daemon_reload: true
          enabled: true

  - name: Kubeadm Cluster bootstrap
    block:
      - name: Create kubeadm config file
        ansible.builtin.blockinfile:
          path: /tmp/kubeadm-config.yml
          block: |
            apiVersion: kubeadm.k8s.io/v1beta3
            kind: ClusterConfiguration
            kubernetesVersion: {{ kubernetes_release }}
            controlPlaneEndpoint: "controlplane:6443"
            networking:
              dnsDomain: cluster.local
              podSubnet: 10.11.0.0/16
              serviceSubnet: 172.16.0.0/16
            apiServer:
              extraVolumes:
              - name: "audit"
                hostPath: "/etc/kubernetes/audit-policy.yaml"
                mountPath: "/etc/kubernetes/audit-policy.yaml"
                readOnly: true
                pathType: File
              - name: "audit-log"
                hostPath: "/var/log/kubernetes/audit/"
                mountPath: "/var/log/kubernetes/audit/"
                readOnly: false
                pathType: DirectoryOrCreate
              extraArgs:
                profiling: "false"
                enable-admission-plugins: "NodeRestriction,AlwaysPullImages"
                request-timeout: "300s"
                audit-policy-file: "/etc/kubernetes/audit-policy.yaml"
                audit-log-path: "/var/log/kubernetes/audit/audit.log"
                audit-log-maxage: "30"
                audit-log-maxbackup: "10"
                audit-log-maxsize: "100"
            controllerManager:
              extraArgs:
                flex-volume-plugin-dir: "/etc/kubernetes/kubelet-plugins/volume/exec"
                terminated-pod-gc-threshold: "10"
                profiling: "false"
            scheduler:
              extraArgs:
                profiling: "false"
            ---
            apiVersion: kubelet.config.k8s.io/v1beta1
            kind: KubeletConfiguration
            cgroupDriver: systemd
            serverTLSBootstrap: true
            seccompDefault: true
            protectKernelDefaults: true
            authentication:
              anonymous:
                enabled: false
            eventRecordQPS: 0
            ---
            apiVersion: kubeadm.k8s.io/v1beta3
            kind: InitConfiguration
            nodeRegistration:
              criSocket: "unix:///var/run/crio/crio.sock"
            kubeletExtraArgs:
              volume-plugin-dir: "/etc/kubernetes/kubelet-plugins/volume/exec/"
          create: true
          mode: 0644
        register: kubeadm_config

      - name: Kubeadm reset
        ansible.builtin.command: kubeadm reset --force
        when: kubeadm_config is changed

      - name: Kubeadm Control Plane Images Pull
        ansible.builtin.command: kubeadm config images pull
        when: kubeadm_config is changed

      - name: Kubernetes Audit Policy
        ansible.builtin.blockinfile:
          path: /etc/kubernetes/audit-policy.yaml
          block: |
            # Log all requests at the Metadata level.
            apiVersion: audit.k8s.io/v1
            kind: Policy
            rules:
            - level: Metadata
          create: true
          mode: 0644

      - name: Kubeadm init
        ansible.builtin.command: kubeadm init --config=/tmp/kubeadm-config.yml --upload-certs --skip-phases=addon/kube-proxy
        register: kubeadm_init
        when: kubeadm_config is changed

      - name: Creating .kube directory
        ansible.builtin.file:
          path: "{{ item }}"
          state: directory
          owner: "{{ ansible_user }}"
          group: "{{ ansible_user }}"
          mode: 0740
        loop:
          - "/home/{{ ansible_user }}/.kube"
          - "~/.kube"

      - name: Linking admin.conf file to ~/.kube/config
        ansible.builtin.copy:
          src: /etc/kubernetes/admin.conf
          remote_src: true
          dest: "{{ item }}"
          mode: 0640
        loop:
          - "~/.kube/config"
          - "/home/{{ ansible_user }}/.kube/config"

      - name: Change owner of kubeconfig
        ansible.builtin.file:
          path: /home/{{ ansible_user }}/.kube/config
          owner: "{{ ansible_user }}"
          group: "{{ ansible_user }}"
          mode: 0640

      - name: Install Kubernetes autocomplete
        ansible.builtin.lineinfile:
          path: ~/.bashrc
          line: "{{ item }}"
        loop:
          - source <(kubectl completion bash)
          - alias k=kubectl
          - complete -o default -F __start_kubectl k
        become_user: "{{ ansible_user }}"
        become: false

      - name: Configure etcd directory owner
        ansible.builtin.file:
          path: /var/lib/etcd
          owner: etcd
          group: etcd

      - name: Wait kubelet
        ansible.builtin.pause:
          seconds: 20
        when: kubeadm_init is changed

      - name: Kubelet certificates approve
        ansible.builtin.shell: kubectl get csr --no-headers | grep Pending |  awk '{print $1}' | tr '\n' ' ' | xargs kubectl certificate approve
        become_user: "{{ ansible_user }}"
        become: false
        when: kubeadm_init is changed

  - name: Cilium install
    block:
      - name: Download cilium
        ansible.builtin.unarchive:
          src: https://github.com/cilium/cilium-cli/releases/latest/download/cilium-linux-amd64.tar.gz
          dest: /usr/local/bin
          remote_src: true
        register: download_cilium
        retries: 3
        delay: 10
        until: download_cilium is not failed
        when: kubeadm_init is changed

      - name: Cilium install on Kubernetes
        ansible.builtin.command: cilium install --config ipam=kubernetes
        become_user: "{{ ansible_user }}"
        become: false
        when: download_cilium is changed

  - name: Generate Token Join for worker nodes
    block:
      - name: Generate join command
        ansible.builtin.command: kubeadm token create --print-join-command
        register: join_command
        when: kubeadm_init is changed

      - name: Copy join command to local file
        become: false
        delegate_to: localhost
        ansible.builtin.copy:
          content: "{{ join_command.stdout_lines[0] }}"
          dest: "./join-command"
          mode: 0777
        when: kubeadm_init is changed
